<link href='/css/annual-leave.css' rel='stylesheet' type='text/css'>
<head>
  <% include ../partials/head.ejs %>
</head>
<body class='container'>
  <div id='main'></div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.js"></script>
  <script type='text/babel'>
    /**
     * 時數輸入欄位
     */
    class HoursInput extends React.Component {
      render () {
        return (
          <div className='input-group'>
            <div className='input-group-prepend'>
              <span className='input-group-text' id='hours'>剩餘時數</span>
            </div>
            <input type='text' id='hours' className='form-control' placeholder='ex: 80 or 110.5' aria-label='hours' aria-describedby='hours' />
          </div>
        )
      }
    }

    /**
     * 到期日
     */
    class EndDate extends React.Component {
      render () {
        const isBeforeResetDate = moment(moment().format('MM-DD')).isBefore(moment('07-05'))
        let endYear = Number(moment().format('YYYY'))

        if (isBeforeResetDate != 'true') {
          endYear = endYear + 1
        }

        const defaultEndDate = `${endYear}-07-05`

        return (
          <div className='input-group'>
            <div className='input-group-prepend'>
              <span className='input-group-text' id='end-date'>到期日</span>
            </div>
            <input type='text' id='end-date' className='form-control' placeholder='ex: 2020-07-06' aria-label='end-date' aria-describedby='end-date' defaultValue={defaultEndDate} />
          </div>
        )
      }
    }

    /**
     * 計算按鈕
     */
     class CalBtn extends React.Component {
      render () {
        return (
          <button id='cal' className='btn btn-primary' value='計算' onClick={this.props.cal}>計算</button>
        )
      }
    }

    class QueryBar extends React.Component {
      render () {
        return (
          <div className='form-row align-items-center'>
            <div className='col-md-4'>
              <HoursInput />
            </div>
            <div className='col-md-4'>
              <EndDate />
            </div>
            <div className='col-md-2'>
              <CalBtn cal={this.props.cal}/>
            </div>
            <div className='col-md-2'>
            </div>
          </div>
        )
      }
    }

    class QueryInfo extends React.Component {
      render () {
        if (this.props.duration_days === 0 && this.props.work_days === 0) {
          return (<div />)
        }

        return (
          <div>
            總天數：{this.props.duration_days}, 工作日：{this.props.work_days}
          </div>
        )
      }
    }

    class QueryResult extends React.Component {
      render () {
        const combinations = this.props.combinations
        if (combinations.length === 0) {
          return (<div />)
        }

        return (
          <table className='table table-striped table-hover'>
            <thead>
              <tr>
                <th className='text-center'>推薦</th>
                <th className='text-center'>整天(8小時)</th>
                <th className='text-center'>下半天(4.5小時)</th>
                <th className='text-center'>上半天(3.5小時)</th>
                <th className='text-center'>剩餘時數</th>
                <th className='text-center'>可放天數</th>
              </tr>
            </thead>
            <tbody>
            {
              combinations.map((c, i) => {
                const left = this.props.hours - 8 * c['8'] - 4.5 * c['4.5'] - 3.5 * c['3.5']
                const useDays = c['8'] + c['4.5'] + c['3.5']

                return (
                  <tr key={i} >
                    <td className='text-center'>{left < 1 ? 'Ｏ' : ''}</td>
                    <td className='text-center'>{c['8'] === 0 ? '' : c['8']}</td>
                    <td className='text-center'>{c['4.5'] === 0 ? '' : c['4.5']}</td>
                    <td className='text-center'>{c['3.5'] === 0 ? '' : c['3.5']}</td>
                    <td className='text-center'>{left}</td>
                    <td className='text-center'>{useDays}</td>
                  </tr>
                )
              })
            }
            </tbody>
          </table>
        )
      }
    }

    class AnnualLeave extends React.Component {
      constructor (props) {
        super(props)
        this.state = {
          query_hours: 42.5,
          duration_days: 0,
          work_days: 0,
          combinations: []
        }

        this.cal = this.cal.bind(this)
      }

      componentDidMount () {
      }

      cal () {
        const hours = $('input#hours').val()
        const endDate = $('input#end-date').val()

        $.ajax({
          url: `/api/annual_leave_distribution?hours=${hours}&end_date=${endDate}`,
          type: 'get'
        })
        .done(data => {
          if (data.result == 'error') {
            return notifyAlert('取得特休分配錯誤! 錯誤訊息: \n' + JSON.stringify(data.msg))
          }

          this.setState({
            query_hours: hours,
            duration_days: data.ret['duration_days'],
            work_days: data.ret['work_days'],
            combinations: data.ret['combinations']
          })
        })
        .fail((jqXHR, textStatus, error) => {
          return notifyAlert('取得特休分配錯誤! 錯誤訊息: \n' + JSON.stringify(jqXHR))
        })
      }

      render () {
        return (
          <div>
            <br />
            <div className='col-md-12'>
              <h1>特休分配計算</h1>
            </div>
            <div className='col-md-12'>
              <QueryBar cal={this.cal} />
            </div>
            <hr />
            <div className='col-md-12'>
              <QueryInfo
                duration_days={this.state.duration_days}
                work_days={this.state.work_days}
              />
            </div>
            <br />
            <div className='col-md-12 table-responsive'>
              <QueryResult
                hours={this.state.query_hours}
                combinations={this.state.combinations}
              />
            </div>
          </div>
        )
      }
    }

    ReactDOM.render(
      <AnnualLeave />,
      document.getElementById('main')
    )
  </script>
  <footer>
    <% include ../partials/footer.ejs %>
  </footer>
</body>
